{"ast":null,"code":"var _jsxFileName = \"/Users/asso210/Desktop/Desktop/borsa_micciche_mantegna/dashboard/frontend/src/pages/AnalyticsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ForceGraph2D from \"react-force-graph-2d\";\n\n// Mappa colori RGB\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colorMap = {\n  A: [229, 166, 250],\n  B: [50, 115, 213],\n  C: [142, 68, 24],\n  D: [140, 26, 17],\n  E: [106, 23, 245],\n  F: [38, 91, 53],\n  G: [101, 203, 91],\n  H: [247, 206, 160],\n  I: [69, 8, 88],\n  J: [174, 252, 187],\n  K: [140, 125, 38],\n  L: [167, 203, 63],\n  M: [178, 36, 133],\n  N: [18, 50, 123]\n};\n\n// Funzione per convertire RGB in stringa CSS\nconst rgbToCss = rgbArray => `rgb(${rgbArray[0]}, ${rgbArray[1]}, ${rgbArray[2]})`;\nfunction AnalyticsPage() {\n  _s();\n  const [graphData, setGraphData] = useState({\n    nodes: [],\n    links: []\n  });\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/graph\").then(res => res.json()).then(data => {\n      // Aggiungi proprietà \"color\" ai nodi\n      const nodesWithColor = data.nodes.map(node => {\n        const letter = node.id.charAt(0).toUpperCase();\n        const rgb = colorMap[letter] || [200, 200, 200]; // colore di fallback grigio\n        return {\n          ...node,\n          color: rgbToCss(rgb)\n        };\n      });\n      setGraphData({\n        nodes: nodesWithColor,\n        links: data.edges\n      });\n      setLoading(false);\n    }).catch(err => {\n      console.error(err);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Caricamento grafo...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      width: \"100vw\"\n    },\n    children: /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n      graphData: graphData,\n      nodeId: \"id\",\n      linkSource: \"source\",\n      linkTarget: \"target\",\n      nodeLabel: \"id\",\n      nodeAutoColorBy: null,\n      nodeCanvasObject: (node, ctx, globalScale) => {\n        const label = node.id;\n        const fontSize = 12 / globalScale;\n        ctx.fillStyle = node.color || \"gray\";\n        ctx.beginPath();\n        ctx.arc(node.x, node.y, 5, 0, 2 * Math.PI, false);\n        ctx.fill();\n        ctx.font = `${fontSize}px Sans-Serif`;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"top\";\n        ctx.fillStyle = \"black\";\n        ctx.fillText(label, node.x, node.y + 6);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(AnalyticsPage, \"2XV4sPiZFeviCROM5sAheOufqRo=\");\n_c = AnalyticsPage;\nexport default AnalyticsPage;\nvar _c;\n$RefreshReg$(_c, \"AnalyticsPage\");","map":{"version":3,"names":["React","useEffect","useState","ForceGraph2D","jsxDEV","_jsxDEV","colorMap","A","B","C","D","E","F","G","H","I","J","K","L","M","N","rgbToCss","rgbArray","AnalyticsPage","_s","graphData","setGraphData","nodes","links","loading","setLoading","fetch","then","res","json","data","nodesWithColor","map","node","letter","id","charAt","toUpperCase","rgb","color","edges","catch","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","width","nodeId","linkSource","linkTarget","nodeLabel","nodeAutoColorBy","nodeCanvasObject","ctx","globalScale","label","fontSize","fillStyle","beginPath","arc","x","y","Math","PI","fill","font","textAlign","textBaseline","fillText","_c","$RefreshReg$"],"sources":["/Users/asso210/Desktop/Desktop/borsa_micciche_mantegna/dashboard/frontend/src/pages/AnalyticsPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ForceGraph2D from \"react-force-graph-2d\";\n\n// Mappa colori RGB\nconst colorMap = {\n  A: [229, 166, 250],\n  B: [50, 115, 213],\n  C: [142, 68, 24],\n  D: [140, 26, 17],\n  E: [106, 23, 245],\n  F: [38, 91, 53],\n  G: [101, 203, 91],\n  H: [247, 206, 160],\n  I: [69, 8, 88],\n  J: [174, 252, 187],\n  K: [140, 125, 38],\n  L: [167, 203, 63],\n  M: [178, 36, 133],\n  N: [18, 50, 123]\n};\n\n// Funzione per convertire RGB in stringa CSS\nconst rgbToCss = (rgbArray) => `rgb(${rgbArray[0]}, ${rgbArray[1]}, ${rgbArray[2]})`;\n\nfunction AnalyticsPage() {\n  const [graphData, setGraphData] = useState({ nodes: [], links: [] });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/graph\")\n      .then((res) => res.json())\n      .then((data) => {\n        // Aggiungi proprietà \"color\" ai nodi\n        const nodesWithColor = data.nodes.map((node) => {\n          const letter = node.id.charAt(0).toUpperCase();\n          const rgb = colorMap[letter] || [200, 200, 200]; // colore di fallback grigio\n          return {\n            ...node,\n            color: rgbToCss(rgb)\n          };\n        });\n\n        setGraphData({\n          nodes: nodesWithColor,\n          links: data.edges\n        });\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(err);\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) return <div>Caricamento grafo...</div>;\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100vw\" }}>\n      <ForceGraph2D\n        graphData={graphData}\n        nodeId=\"id\"\n        linkSource=\"source\"\n        linkTarget=\"target\"\n        nodeLabel=\"id\"\n        nodeAutoColorBy={null}\n        nodeCanvasObject={(node, ctx, globalScale) => {\n          const label = node.id;\n          const fontSize = 12 / globalScale;\n          ctx.fillStyle = node.color || \"gray\";\n          ctx.beginPath();\n          ctx.arc(node.x, node.y, 5, 0, 2 * Math.PI, false);\n          ctx.fill();\n\n          ctx.font = `${fontSize}px Sans-Serif`;\n          ctx.textAlign = \"center\";\n          ctx.textBaseline = \"top\";\n          ctx.fillStyle = \"black\";\n          ctx.fillText(label, node.x, node.y + 6);\n        }}\n      />\n    </div>\n  );\n}\n\nexport default AnalyticsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}